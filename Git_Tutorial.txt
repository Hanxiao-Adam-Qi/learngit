Create new dictionaty/ go to new dic/ show the path
    $ mkdir learngit
    $ cd learngit
    $ pwd
    /Users/michael/learngit


Initialize a respository ()
    $ git init

    Create a ‘.git’ file
    DONT TOUCH THINGS INSIDE！

All git commands should run in REPOSITORIES, except for git init

Set username and email
    $ git config --global user.name "Your Name"
    $ git config --global user.email "email@example.com"

Add files into a space prepard for commit
    $ git add FILE_NAME

    Should give nothing to show
    //NO MESSAGE IS GOOD MESSAGE

Commit changes (can add more than one file, so commit many in one commit)
    $ git commit -m "Command for this commit"

Get the status of repo, check changes of files
    $ git status

Check ditailed difference of changes
    $ git diff <file name>

Check history of file
    $ git log

    add --pretty=oneline to show a more clean log information

Reset to a previous version
    $ git reset --hard HEAD^

    HEAD means present version, HEAD^ means last one , HEAD^^ last two.....

    Reset back:
        $ git reset --hard 0079fc1f7

        0079fc1f7 is the version number, can reset back

Regred?
    $ git relog 
    
    get record of command to reset back

Delete changes added to stage
    $ git checkour -- file

    一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
    一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
    git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令

    